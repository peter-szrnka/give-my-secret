{
	"info": {
		"_postman_id": "e30a9948-08dd-40e7-a9f8-7234ff5ccec2",
		"name": "Give My Secret Application",
		"description": "Main page:\n\n[https://peter-szrnka.github.io/give-my-secret/](https://peter-szrnka.github.io/give-my-secret/)\n\nGitHub repository:\n\n[https://github.com/peter-szrnka/give-my-secret](https://github.com/peter-szrnka/give-my-secret)\n\nSonar (backend side):\n\n[https://sonarcloud.io/project/overview?id=peter-szrnka_give-my-secret-backend](https://sonarcloud.io/project/overview?id=peter-szrnka_give-my-secret-backend)\n\nSonar (frontend side):\n\n[https://sonarcloud.io/summary/new_code?id=peter-szrnka_give-my-secret-frontend](https://sonarcloud.io/summary/new_code?id=peter-szrnka_give-my-secret-frontend)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1160908"
	},
	"item": [
		{
			"name": "Endpoint samples",
			"item": [
				{
					"name": "API",
					"item": [
						{
							"name": "Get Secret Value via API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{currentApiKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/secret/{{currentSecretId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"secret",
										"{{currentSecretId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Login & Logout",
					"item": [
						{
							"name": "Login with admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Check user id\", function () {\r",
											"    pm.expect(jsonData.currentUser.id).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Check user name\", function () {\r",
											"    pm.expect(jsonData.currentUser.name).to.eql(\"admin\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check user role\", function () {\r",
											"    pm.expect(jsonData.currentUser.roles).to.eql([\"ROLE_ADMIN\"]);\r",
											"});\r",
											"\r",
											"pm.collectionVariables.set('currentAdminId', jsonData.currentUser.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "XSRF-TOKEN=72b92c34-b071-4582-87b9-6b5589e652e4",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"admin\",\r\n    \"credential\" : \"Test1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authenticate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login with test",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Check user id\", function () {\r",
											"    pm.expect(jsonData.currentUser.id).to.eql(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Check user name\", function () {\r",
											"    pm.expect(jsonData.currentUser.name).to.eql(\"test\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check user role\", function () {\r",
											"    pm.expect(jsonData.currentUser.roles).to.eql([\"ROLE_USER\"]);\r",
											"});\r",
											"\r",
											"pm.collectionVariables.set('currentUserId', jsonData.currentUser.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "XSRF-TOKEN=72b92c34-b071-4582-87b9-6b5589e652e4",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"test\",\r\n    \"credential\" : \"Test1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authenticate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login with mfa_only",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Check user id\", function () {\r",
											"    pm.expect(jsonData.currentUser.id).to.eql(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Check user name\", function () {\r",
											"    pm.expect(jsonData.currentUser.name).to.eql(\"test\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check user role\", function () {\r",
											"    pm.expect(jsonData.currentUser.roles).to.eql([\"ROLE_USER\"]);\r",
											"});\r",
											"\r",
											"pm.collectionVariables.set('currentUserId', jsonData.currentUser.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "XSRF-TOKEN=72b92c34-b071-4582-87b9-6b5589e652e4",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"mfa_only\",\r\n    \"credential\" : \"Test1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authenticate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "XSRF-TOKEN=72b92c34-b071-4582-87b9-6b5589e652e4",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"test\",\r\n    \"credential\" : \"Test1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/logoutUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logoutUser"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "System info",
					"item": [
						{
							"name": "User info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/info/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"info",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Admin user setup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"Peter Szrnka\",\r\n    \"username\" : \"admin\",\r\n    \"email\" : \"{{email}}\",\r\n    \"credential\" : \"Test1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/setup/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"setup",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Synchronize users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secure/user/sync_ldap_users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secure",
										"user",
										"sync_ldap_users"
									]
								}
							},
							"response": []
						},
						{
							"name": "System status",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"status"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Admin features",
					"item": [
						{
							"name": "Announcements",
							"item": [
								{
									"name": "Get announcements",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check number of total elements\", function () {\r",
													"    pm.expect(jsonData.totalElements).to.eq(1);\r",
													"});\r",
													"\r",
													"\r",
													"pm.collectionVariables.set('currentApiKeyId', jsonData.resultList[0].id);\r",
													"pm.collectionVariables.set('currentApiKey', jsonData.resultList[0].value);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"direction\" : \"ASC\",\r\n    \"property\" : \"id\",\r\n    \"page\" : 0,\r\n    \"size\" : 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/announcement/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"announcement",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Save announcement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set('currentDeletableAnnouncementId', jsonData.entityId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\": \"Title {{$guid}}\",\r\n    \"description\": \"Description ${{$guid}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/announcement",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"announcement"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get announcement by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check number of total elements\", function () {\r",
													"    pm.expect(jsonData.id).to.eq(pm.collectionVariables.get('currentSecretId'));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secure/announcement/{{currentDeletableAnnouncementId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"announcement",
												"{{currentDeletableAnnouncementId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete announcement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.collectionVariables.set('currentDeletableApiKeyId', \"?\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secure/announcement/{{currentDeletableAnnouncementId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"announcement",
												"{{currentDeletableAnnouncementId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "System properties",
							"item": [
								{
									"name": "Get system properties",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check number of total elements\", function () {\r",
													"    pm.expect(jsonData.totalElements).to.eq(9);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"direction\" : \"ASC\",\r\n    \"property\" : \"id\",\r\n    \"page\" : 0,\r\n    \"size\" : 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/system_property/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"system_property",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Save new system property",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"key\": \"ORGANIZATION_NAME\",\r\n    \"value\": \"Test organization\",\r\n    \"type\": \"STRING\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/system_property",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"system_property"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete a system property",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secure/system_property/ORGANIZATION_NAME",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"system_property",
												"ORGANIZATION_NAME"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Users",
							"item": [
								{
									"name": "List all users",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"direction\" : \"ASC\",\r\n    \"property\" : \"id\",\r\n    \"page\" : 0,\r\n    \"size\" : 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/user/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"user",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Save new user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set('currentDeletableUserId', jsonData.entityId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"test{{$guid}}\",\r\n    \"username\": \"test{{$guid}}\",\r\n    \"email\": \"test@test{{$guid}}\",\r\n    \"status\": \"ACTIVE\",\r\n    \"credential\": \"Asdf1234\",\r\n    \"roles\": [\r\n        \"ROLE_USER\"\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get user by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/user/{{currentDeletableUserId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"user",
												"{{currentDeletableUserId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get MFA QR code",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/user/mfa_qr_code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"user",
												"mfa_qr_code"
											]
										}
									},
									"response": []
								},
								{
									"name": "Disable user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/user/{{currentDeletableUserId}}?enabled=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"user",
												"{{currentDeletableUserId}}"
											],
											"query": [
												{
													"key": "enabled",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/user/{{currentDeletableUserId}}?enabled=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"user",
												"{{currentDeletableUserId}}"
											],
											"query": [
												{
													"key": "enabled",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.collectionVariables.set('currentDeletableUserId', \"?\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secure/user/{{currentDeletableUserId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"user",
												"{{currentDeletableUserId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Events",
							"item": [
								{
									"name": "List events",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check event list exists\", function() {\r",
													"    pm.expect(jsonData.resultList).is.not.undefined;\r",
													"});\r",
													"\r",
													"pm.test(\"Check event list is not empty\", function() {\r",
													"    pm.expect(jsonData.resultList.length).greaterThan(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"direction\" : \"ASC\",\r\n    \"property\" : \"id\",\r\n    \"page\" : 0,\r\n    \"size\" : 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/event/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"event",
												"list"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "User features",
					"item": [
						{
							"name": "API keys",
							"item": [
								{
									"name": "Get list of api keys",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check number of total elements\", function () {\r",
													"    pm.expect(jsonData.totalElements).to.eq(1);\r",
													"});\r",
													"\r",
													"\r",
													"pm.collectionVariables.set('currentApiKeyId', jsonData.resultList[0].id);\r",
													"pm.collectionVariables.set('currentApiKey', jsonData.resultList[0].value);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"direction\" : \"ASC\",\r\n    \"property\" : \"id\",\r\n    \"page\" : 0,\r\n    \"size\" : 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/apikey/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"apikey",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Save an API key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set('currentDeletableApiKeyId', jsonData.entityId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"userId\": {{currentUserId}},\r\n    \"name\": \"apikey-{{$guid}}\",\r\n    \"value\": \"{{$guid}}\",\r\n    \"description\": \"Randomly generated API key\",\r\n    \"status\": \"ACTIVE\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/apikey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"apikey"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API key by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check number of total elements\", function () {\r",
													"    pm.expect(jsonData.id).to.eq(pm.collectionVariables.get('currentSecretId'));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secure/apikey/{{currentDeletableApiKeyId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"apikey",
												"{{currentDeletableApiKeyId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API key value by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Content type is text plain\", function () {\r",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eq(\"text/plain;charset=UTF-8\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secure/apikey/value/{{currentDeletableApiKeyId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"apikey",
												"value",
												"{{currentDeletableApiKeyId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Disable API key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/apikey/{{currentDeletableApiKeyId}}?enabled=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"apikey",
												"{{currentDeletableApiKeyId}}"
											],
											"query": [
												{
													"key": "enabled",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable API key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/apikey/{{currentDeletableApiKeyId}}?enabled=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"apikey",
												"{{currentDeletableApiKeyId}}"
											],
											"query": [
												{
													"key": "enabled",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete API key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.collectionVariables.set('currentDeletableApiKeyId', \"?\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secure/apikey/{{currentDeletableApiKeyId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"apikey",
												"{{currentDeletableApiKeyId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all API key names",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check number of total elements\", function () {\r",
													"    pm.expect(jsonData.resultList.length).to.eq(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secure/apikey/list_names",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"apikey",
												"list_names"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Secrets",
							"item": [
								{
									"name": "Get list of secrets",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check number of total elements\", function () {\r",
													"    pm.expect(jsonData.totalElements).to.eq(1);\r",
													"});\r",
													"\r",
													"\r",
													"pm.collectionVariables.set('currentSecretId', jsonData.resultList[0].id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"direction\" : \"ASC\",\r\n    \"property\" : \"id\",\r\n    \"page\" : 0,\r\n    \"size\" : 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/secret/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"secret",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get secret by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check number of total elements\", function () {\r",
													"    pm.expect(jsonData.id).to.eq(pm.collectionVariables.get('currentSecretId'));\r",
													"});\r",
													"\r",
													"pm.collectionVariables.set('currentSecret', jsonData.secretId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"direction\" : \"ASC\",\r\n    \"property\" : \"id\",\r\n    \"page\" : 0,\r\n    \"size\" : 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/secret/{{currentSecretId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"secret",
												"{{currentSecretId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Save a secret",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set('currentDeletableSecretId', jsonData.entityId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"userId\": {{currentUserId}},\r\n    \"keystoreId\": 1,\r\n    \"keystoreAliasId\": 1,\r\n    \"secretId\": \"secret{{$guid}}\",\r\n    \"status\": \"ACTIVE\",\r\n    \"value\" : \"my-value\",\r\n    \"type\": \"SIMPLE_CREDENTIAL\",\r\n    \"rotationPeriod\": \"HOURLY\",\r\n    \"returnDecrypted\": true,\r\n    \"rotationEnabled\": false,\r\n    \"apiKeyRestrictions\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/secret",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"secret"
											]
										}
									},
									"response": []
								},
								{
									"name": "Rotate secret",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"userId\": {{currentUserId}},\r\n    \"keystoreId\": 1,\r\n    \"keystoreAliasId\": 1,\r\n    \"secretId\": \"secret{{$guid}}\",\r\n    \"status\": \"ACTIVE\",\r\n    \"value\" : \"my-value\",\r\n    \"type\": \"SIMPLE_CREDENTIAL\",\r\n    \"rotationPeriod\": \"HOURLY\",\r\n    \"returnDecrypted\": true,\r\n    \"rotationEnabled\": false,\r\n    \"apiKeyRestrictions\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/secret/rotate/{{currentDeletableSecretId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"secret",
												"rotate",
												"{{currentDeletableSecretId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get secret value by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Content type is text plain\", function () {\r",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eq(\"text/plain;charset=UTF-8\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secure/secret/value/{{currentDeletableSecretId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"secret",
												"value",
												"{{currentDeletableSecretId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Disable secret",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/secret/{{currentDeletableSecretId}}?enabled=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"secret",
												"{{currentDeletableSecretId}}"
											],
											"query": [
												{
													"key": "enabled",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable secret",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/secret/{{currentDeletableSecretId}}?enabled=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"secret",
												"{{currentDeletableSecretId}}"
											],
											"query": [
												{
													"key": "enabled",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Secret",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.collectionVariables.set('currentDeletableSecretId', \"?\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secure/secret/{{currentDeletableSecretId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"secret",
												"{{currentDeletableSecretId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Settings",
							"item": [
								{
									"name": "Change credential",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"oldCredential\" : \"Test1234\",\r\n    \"newCredential\" : \"Asdf1234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/user/change_credential",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"user",
												"change_credential"
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable MFA",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/user/toggle_mfa?enabled=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"user",
												"toggle_mfa"
											],
											"query": [
												{
													"key": "enabled",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Is MFA Active",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/user/mfa_active",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"user",
												"mfa_active"
											]
										}
									},
									"response": []
								},
								{
									"name": "Disable MFA",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/user/toggle_mfa?enabled=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"user",
												"toggle_mfa"
											],
											"query": [
												{
													"key": "enabled",
													"value": "false"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Keystores",
							"item": [
								{
									"name": "Get list of keystores",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check number of total elements\", function () {\r",
													"    pm.expect(jsonData.totalElements).to.eq(1);\r",
													"});\r",
													"\r",
													"\r",
													"pm.collectionVariables.set('currentKeystoreId', jsonData.resultList[0].id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"direction\" : \"ASC\",\r\n    \"property\" : \"id\",\r\n    \"page\" : 0,\r\n    \"size\" : 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/keystore/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"keystore",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Save keystore with generated key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set('currentDeletableKeystoreId', jsonData.entityId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": [],
													"disabled": true
												},
												{
													"key": "model",
													"value": "{    \"status\": \"ACTIVE\",    \"name\": \"jks{{$guid}}\",    \"type\": \"JKS\",    \"description\": \"jks{{$guid}}\",    \"credential\": \"test\",    \"generated\": true,\t\"aliases\": [        {            \"alias\": \"test1\",            \"aliasCredential\": \"test1\",            \"algorithm\": \"SHA256WITHRSA\",\t\t\t\"operation\": \"SAVE\"        },\t\t{            \"alias\": \"test2\",            \"aliasCredential\": \"test2\",            \"algorithm\": \"SHA256WITHRSA\",\t\t\t\"operation\": \"SAVE\"        }    ]}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/secure/keystore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"keystore"
											]
										}
									},
									"response": []
								},
								{
									"name": "Save keystore with predefined key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set('currentDeletableKeystoreId', jsonData.entityId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/dev/projects/open-source/github/give-my-secret/postman/work_dir/sample_keystore.jks"
												},
												{
													"key": "model",
													"value": "{    \"status\": \"ACTIVE\",    \"name\": \"jks{{$guid}}\",    \"type\": \"JKS\",    \"description\": \"jks{{$guid}}\",    \"credential\": \"test\",    \"generated\": false,\t\"aliases\": [        {            \"alias\": \"test1\",            \"aliasCredential\": \"test1\",            \"algorithm\": \"SHA256WITHRSA\",\t\t\t\"operation\": \"SAVE\"        },\t\t{            \"alias\": \"test2\",            \"aliasCredential\": \"test2\",            \"algorithm\": \"SHA256WITHRSA\",\t\t\t\"operation\": \"SAVE\"        }    ]}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/secure/keystore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"keystore"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get list of keystore aliases",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"direction\" : \"ASC\",\r\n    \"property\" : \"id\",\r\n    \"page\" : 0,\r\n    \"size\" : 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/keystore/list_aliases/{{currentDeletableKeystoreId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"keystore",
												"list_aliases",
												"{{currentDeletableKeystoreId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get keystore by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check number of total elements\", function () {\r",
													"    pm.expect(jsonData.totalElements).to.eq(1);\r",
													"});\r",
													"\r",
													"\r",
													"pm.collectionVariables.set('currentKeystoreAliasId', jsonData.aliases[0].id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"direction\" : \"ASC\",\r\n    \"property\" : \"id\",\r\n    \"page\" : 0,\r\n    \"size\" : 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/keystore/{{currentDeletableKeystoreId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"keystore",
												"{{currentDeletableKeystoreId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get keystore credential value by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Content type is text plain\", function () {\r",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eq(\"text/plain;charset=UTF-8\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"entityId\" : {{currentDeletableKeystoreId}},\r\n    \"aliasId\" : {{currentKeystoreAliasId}},\r\n    \"valueType\" : \"KEYSTORE_CREDENTIAL\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/keystore/value",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"keystore",
												"value"
											]
										}
									},
									"response": []
								},
								{
									"name": "Download keystore",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secure/keystore/download/{{currentDeletableKeystoreId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"keystore",
												"download",
												"{{currentDeletableKeystoreId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all keystore names",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check number of total elements\", function () {\r",
													"    pm.expect(jsonData.resultList.length).to.eq(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secure/keystore/list_names",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"keystore",
												"list_names"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete keystore",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.collectionVariables.set('currentDeletableApiKeyId', \"?\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secure/keystore/{{currentDeletableKeystoreId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"keystore",
												"{{currentDeletableKeystoreId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Messages",
							"item": [
								{
									"name": "List messages",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"direction\" : \"ASC\",\r\n    \"property\" : \"id\",\r\n    \"page\" : 0,\r\n    \"size\" : 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secure/message/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secure",
												"message",
												"list"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Tests",
			"item": [
				{
					"name": "Performance test",
					"item": [
						{
							"name": "Get Secret Value via API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{currentApiKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/secret/{{currentSecret}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"secret",
										"{{currentSecret}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Secret 2 Value via API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{currentApiKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/secret/{{currentDeletableSecret}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"secret",
										"{{currentDeletableSecret}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "Simple performance test to check the application locally."
				},
				{
					"name": "Failing requests",
					"item": [
						{
							"name": "Invalid secret query",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{currentApiKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/secret/invalidSecretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"secret",
										"invalidSecretId"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid API key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{currentApiKey}}--",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/secret/invalidSecretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"secret",
										"invalidSecretId"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "currentAdminId",
			"value": "?",
			"type": "string"
		},
		{
			"key": "currentUserId",
			"value": "?",
			"type": "string"
		},
		{
			"key": "currentSecret",
			"value": "?",
			"type": "string"
		},
		{
			"key": "currentSecretId",
			"value": "?"
		},
		{
			"key": "currentDeletableSecretId",
			"value": "?",
			"type": "string"
		},
		{
			"key": "currentDeletableSecret",
			"value": "?",
			"type": "string"
		},
		{
			"key": "currentApiKey",
			"value": "?",
			"type": "string"
		},
		{
			"key": "currentApiKeyId",
			"value": "?",
			"type": "string"
		},
		{
			"key": "currentDeletableApiKeyId",
			"value": "?",
			"type": "string"
		},
		{
			"key": "currentDeletableUserId",
			"value": "?",
			"type": "string"
		},
		{
			"key": "currentKeystoreId",
			"value": "?",
			"type": "string"
		},
		{
			"key": "currentDeletableKeystoreId",
			"value": "?",
			"type": "string"
		},
		{
			"key": "currentKeystoreAliasId",
			"value": "?",
			"type": "string"
		},
		{
			"key": "currentDeletableAnnouncementId",
			"value": "?",
			"type": "string"
		}
	]
}