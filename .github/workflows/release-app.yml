name: Release of application
on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Default version to use when preparing a release."
        required: true
        default: "X.Y.Z"
      developmentVersion:
        description: "Default version to use for new local working copy."
        required: true
        default: "X.Y.Z-SNAPSHOT"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
permissions:
  contents: write
jobs:
  analize_backend:
    name: Backend code analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Sonarcloud scan
        working-directory: ./code/gms-backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn clean -Pcodecov -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=peter-szrnka_give-my-secret-backend
  analize_frontend:
    name: Frontend code analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Build with NPM
        working-directory: ./code/gms-frontend
        run: npm install
      - name: Run tests
        working-directory: ./code/gms-frontend
        run: npm run test
      - name: Sonarcloud scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args:
            -Dsonar.projectKey=peter-szrnka_give-my-secret-frontend
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION_KEY }}
            -Dsonar.test.inclusions=**/*.spec.ts
            -Dsonar.exclusions=**/*.java,**/*.class,**/*.scss,**/*.html,**/*.json,**/*.xml,**/*.js,**/environments/*.*,**/polyfills.ts,**/*module.ts,**/main.ts,**/mock-config.ts,**/*.provider.ts
            -Dsonar.typescript.lcov.reportPaths=./code/gms-frontend/coverage/lcov.info
            -Dsonar.javascript.lcov.reportPaths=./code/gms-frontend/coverage/lcov.info
            -Dsonar.sources=./code/gms-frontend/src

  build:
    name: Build production artifact
    runs-on: ubuntu-latest
    if: false
    needs: [analize_backend, analize_frontend]
    env:
      working-directory: ./code
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Update pom.xml to releaseVersion
        working-directory: ./code
        run: mvn -B versions:set -DnewVersion=${{ github.event.inputs.releaseVersion }} -DgenerateBackupPoms=false -f pom.xml
      - name: Update NPM version TODO
      - name: Commit version change
        run: |
          git config --global user.name ${{ secrets.GH_USERNAME }}
          git config --global user.email ${{ secrets.GH_EMAIL }}
          git commit -am "Version updated to ${{ github.event.inputs.releaseVersion }}"
          git push
