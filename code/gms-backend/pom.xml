<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.github.gms</groupId>
		<artifactId>give-my-secret</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>gms-backend</artifactId>

	<properties>
		<java.version>11</java.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<backend.buildname>gms-backend</backend.buildname>

		<spring-boot.version>2.7.3</spring-boot.version>
		<guava.version>31.1-jre</guava.version>
		<vaadin.version>23.0.9</vaadin.version>

		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>

		<!-- Testing & code quality -->
		<jacoco-maven-plugin.version>0.8.6</jacoco-maven-plugin.version>
		<skip.jacoco-check-execution>false</skip.jacoco-check-execution>
		<test.minimum.coverage>0.90</test.minimum.coverage>

		<sonar.organization>szrnka-peter</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.exclusions>**/enums/**, 
			**/dto/**, 
			**/model/**, 
			**/config/**,
			**/entity/**,
			**/util/**,
			**/exception/**,
			**/types/**,
			**/event/**,
			**/*Entity.java,
			**/*Application.java
		</sonar.exclusions>
	</properties>

	<developers>
		<developer>
			<email>szrnka.peter@gmail.com</email>
			<name>PÃ©ter Szrnka</name>
			<url>https://github.com/szrnka-peter</url>
			<roles>
				<role>Architect</role>
				<role>Technical lead</role>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>

	<dependencyManagement>
		<dependencies>
			<!-- Spring Boot -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- Testing -->
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit.jupiter.version}</version>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Spring -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-ldap</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>

		<!-- LDAP -->
		<dependency>
			<groupId>org.springframework.ldap</groupId>
			<artifactId>spring-ldap-core</artifactId>
		</dependency>
		<dependency>
            <groupId>com.unboundid</groupId>
            <artifactId>unboundid-ldapsdk</artifactId>
        </dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context-indexer</artifactId>
		    <optional>true</optional>
		</dependency>

        <!--<dependency>
        	<groupId>com.fasterxml.jackson.datatype</groupId>
        	<artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>-->

		<!-- DB -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.microsoft.sqlserver</groupId>
		    <artifactId>mssql-jdbc</artifactId>
		    <version>9.4.1.jre8</version>
		</dependency>
		<dependency>
		    <groupId>com.oracle.database.jdbc</groupId>
		    <artifactId>ojdbc10</artifactId>
		    <version>19.16.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>9.8.1</version>
		</dependency>
		<dependency>
		    <groupId>org.flywaydb</groupId>
		    <artifactId>flyway-mysql</artifactId>
		    <version>9.8.1</version>
		</dependency>
		<dependency>
		    <groupId>org.flywaydb</groupId>
		    <artifactId>flyway-sqlserver</artifactId>
		    <version>9.8.1</version>
		</dependency>
		<!-- Other 3rd party library -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.11.1</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.11.1</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.11.1</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>${maven-compiler-plugin.version}</version>
						<configuration>
							<release>${maven.compiler.source}</release>
							<source>${maven.compiler.source}</source>
							<target>${maven.compiler.target}</target>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>3.1.1</version>
						<configuration>
							<encoding>UTF-8</encoding>
							<configLocation>src/main/resources/checkstyle.xml</configLocation>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<failOnViolation>true</failOnViolation>

							<enableFilesSummary>true</enableFilesSummary>
							<enableRulesSummary>true</enableRulesSummary>
							<enableSeveritySummary>true</enableSeveritySummary>
						</configuration>
						<executions>
							<execution>
								<id>validate</id>
								<phase>clean</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<version>${spring-boot.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven-surefire-plugin.version}</version>
						<configuration>
							<groups>!IntegrationTest,!SecurityTest</groups>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>codecov</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven-surefire-plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco-maven-plugin.version}</version>
						<configuration>
							<skip>${skip.jacoco-execution}</skip>
							<excludes>
								<exclude>**/*Application.class</exclude>
								<exclude>**/**/DemoDataProviderService.class</exclude>
								<exclude>**/Abstract*.class</exclude>
								<exclude>**/**/*Exception.class</exclude>
								<exclude>**/TestDataProviderService.class</exclude>
								<exclude>**/model/*.class</exclude>
								<exclude>**/config/*.class</exclude>
								<exclude>**/dto/*.class</exclude>
								<exclude>**/enums/*.class</exclude>
								<exclude>**/entity/*.class</exclude>
								<exclude>**/types/*.class</exclude>
								<exclude>**/event/*.class</exclude>
							</excludes>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-report</id>
								<phase>package</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-check</id>
								<phase>test</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<skip>${skip.jacoco-check-execution}</skip>
									<rules>
										<rule>
											<element>BUNDLE</element>
											<limits>
												<limit>
													<counter>INSTRUCTION</counter>
													<value>COVEREDRATIO</value>
													<minimum>${test.minimum.coverage}</minimum>
												</limit>
												<limit>
													<counter>BRANCH</counter>
													<value>COVEREDRATIO</value>
													<minimum>${test.minimum.coverage}</minimum>
												</limit>
											</limits>
										</rule>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>build-prod-docker-image</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<build>
				<finalName>gms-app</finalName>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.0.2</version>
						<executions>
							<execution>
								<id>copy-javascript-resources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/static</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/../gms-frontend/dist/gms-frontend</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>${java.compiler.version}</source>
							<target>${java.target.version}</target>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>io.github.gms</groupId>
								<artifactId>gms-frontend</artifactId>
								<version>0.0.1-SNAPSHOT</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<mainClass>io.github.gms.GmsApplication</mainClass>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>repackage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>3.1.0</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
					<!--<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<configuration>
							<googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
							<finalName>gms-app</finalName>
							<tag>latest</tag>
							<repository>gms-app</repository>
							<buildArgs>
								<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
							</buildArgs>
						</configuration>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>-->
				</plugins>
			</build>
		</profile>
		<profile>
			<id>build-backend-docker-image</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<skipGitHookCopy>true</skipGitHookCopy>
			</properties>
			<build>
				<finalName>${backend.buildname}</finalName>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<!--<includeSystemScope>true</includeSystemScope>
							<classifier>spring-boot</classifier>-->
							<mainClass>io.github.gms.GmsApplication</mainClass>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>repackage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>3.1.0</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<configuration>
							<googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
							<finalName>${backend.buildname}</finalName>
							<tag>latest</tag>
							<repository>${backend.buildname}</repository>
							<buildArgs>
								<JAR_FILE>target/${backend.buildname}.jar</JAR_FILE>
							</buildArgs>
						</configuration>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
