CREATE TABLE gms_user (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    credential VARCHAR2(255),
    email VARCHAR2(255) NOT NULL,
    name VARCHAR2(255) NOT NULL,
    role VARCHAR2(255) NOT NULL,
    status VARCHAR2(255) NOT NULL,
    user_name VARCHAR2(255) NOT NULL,
    mfa_enabled NUMBER(1,0) DEFAULT 0 NOT NULL,
    mfa_secret VARCHAR2(32) NOT NULL,
    failed_attempts NUMBER DEFAULT 0 NOT NULL
);

CREATE TABLE gms_api_key (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    name VARCHAR2(255) NOT NULL,
    description VARCHAR2(255),
    status VARCHAR2(255) NOT NULL,
    user_id NUMBER NOT NULL,
    value VARCHAR2(512) NOT NULL
);

CREATE TABLE gms_event (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    event_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    operation VARCHAR2(255),
    source VARCHAR2(255),
    target VARCHAR2(255),
    user_id NUMBER NOT NULL
    entity_id NUMBER NULL
);

CREATE TABLE gms_keystore (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    credential VARCHAR2(512) NOT NULL,
    description VARCHAR2(255),
    file_name VARCHAR2(255),
    status VARCHAR2(255) NOT NULL,
    type VARCHAR2(255) NOT NULL,
    user_id NUMBER
);

CREATE TABLE gms_keystore_alias (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    keystore_id NUMBER,
    alias VARCHAR2(512) NOT NULL,
    alias_credential VARCHAR2(512) NOT NULL,
    description VARCHAR2(255),
    algorithm VARCHAR2(64)
);

CREATE TABLE gms_secret (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    keystore_alias_id NUMBER NOT NULL,
    last_rotated TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    return_decrypted NUMBER(1,0) DEFAULT 1 NOT NULL,
    rotation_enabled NUMBER(1,0)  DEFAULT 1 NOT NULL,
    rotation_period VARCHAR2(255) NOT NULL,
    secret_id VARCHAR2(255) NOT NULL,
    status VARCHAR2(255),
    secret_type VARCHAR2(255) NOT NULL,
    user_id NUMBER NOT NULL,
    value CLOB NOT NULL
);

CREATE TABLE gms_announcement (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    author_id NUMBER NOT NULL,
    announcement_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    title VARCHAR2(255),
    description VARCHAR2(255)
);

CREATE TABLE gms_message (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    message VARCHAR2(255),
    opened NUMBER DEFAULT 0 NOT NULL,
    action_path VARCHAR2(255)
);

CREATE TABLE gms_api_key_restriction (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    secret_id NUMBER,
    api_key_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL
);

CREATE TABLE gms_system_property (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    prop_key VARCHAR2(255),
    prop_value VARCHAR2(255),
    last_modified TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE gms_ip_restriction (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    user_id NUMBER,
    secret_id NUMBER,
    status VARCHAR2(255),
    ip_pattern VARCHAR2(255),
    allow NUMBER(1,0) DEFAULT 0 NOT NULL,
    global NUMBER(1,0) DEFAULT 0 NOT NULL,
    creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    last_modified TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE gms_job (
	id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
	creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	start_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	end_time TIMESTAMP NULL,
	duration INT NULL,
	name VARCHAR2(255) NOT NULL,
	status VARCHAR2(255) NOT NULL,
	message VARCHAR2(255) NULL,
	correlation_id VARCHAR2(255) NOT NULL
);

CREATE TABLE gms_system_attribute (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    value VARCHAR2(255) NOT NULL
);

INSERT INTO gms_system_attribute (name, value) VALUES ('SYSTEM_STATUS', 'NEED_SETUP');