{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "gms-frontend": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        },
        "@schematics/angular:application": {
          "strict": true
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular/build:application",
          "options": {
            "allowedCommonJsDependencies": ["crypto-js", "moment","randomstring"],
            "outputPath": {
              "base": "dist/gms-frontend"
            },
            "index": "src/index.html",
            "polyfills": [
              "src/polyfills.ts"
            ],
            "tsConfig": "tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "src/favicon.ico",
              "src/assets",
              "src/manifest.webmanifest"
            ],
            "styles": [
              "src/styles.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions" : {
              "includePaths": ["node_modules/"],
              "sass": {
                "silenceDeprecations": ["mixed-decls", "color-functions", "global-builtin", "import"]
              }
            },
            "browser": "src/main.ts"
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
				          "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "productionLocal": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
				          "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "src/app/common/interceptor/mock-interceptor.ts",
                  "with": "src/app/common/interceptor/mock-empty-interceptor.ts"
                }
              ],
              "outputHashing": "all"
            },
            "localHttp": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "src/app/common/interceptor/mock-interceptor.ts",
                  "with": "src/app/common/interceptor/mock-empty-interceptor.ts"
                }
              ]
            },
            "localHttps": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.local.https.ts"
                },
                {
                  "replace": "src/app/common/interceptor/mock-interceptor.ts",
                  "with": "src/app/common/interceptor/mock-empty-interceptor.ts"
                }
              ]
            },
            "mockHttp": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.mock.http.ts"
                }
              ]
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular/build:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "gms-frontend:build:production"
            },
            "productionLocal": {
              "buildTarget": "gms-frontend:build:productionLocal"
            },
            "development": {
              "buildTarget": "gms-frontend:build:development"
            },
            "localHttp": {
              "buildTarget": "gms-frontend:build:localHttp"
            },
            "localHttps": {
              "buildTarget": "gms-frontend:build:localHttps"
            },
            "mockHttp": {
              "buildTarget": "gms-frontend:build:mockHttp"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular/build:extract-i18n",
          "options": {
            "buildTarget": "gms-frontend:build"
          }
        }
      }
    }
  },
  "cli": {
    "analytics": false
  }
}